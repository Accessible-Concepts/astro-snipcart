---
import { ProductMeta, SnipcartProduct } from '@lloydjatkinson/astro-snipcart';

import { Element } from './types';
import Text from './Text.astro';
import Stack from './Stack.astro';
import ProductGrid from './ProductGrid.astro';
import ProductCard from './ProductCard.astro';

export type Props = Element & {
    readonly currency: string;
    readonly products: readonly string[];
};

const { as: Element = 'div', products, currency } = Astro.props as Props;

// const products =
// 	(await Astro.glob<SnipcartProduct & ProductMeta>('../pages/products/*.md'))
// 	.map((markdownProduct) => ({ ...markdownProduct.frontmatter }));

// fetch all markdown files in the products directory that have the same file names in the proucts array
const relatedProducts = await Promise.all(
	products.map(async (product) => {
		const markdownProduct = await Astro.glob<SnipcartProduct & ProductMeta>(
			`../pages/products/${product}.md`
		);

        // Return the first item because we're loading based on the ID in the file name - there should only be one.
        return markdownProduct[0].frontmatter;
	}
));

---
{
    products &&
    products.length > 0 && 
    <Element>
        <Stack>
            <Text>Customers also purchased</Text>
            <ProductGrid>
                {
                    relatedProducts.map((product) => (
                        <ProductCard
                            currency={ currency }
                            { ...product } />
                    ))
                }
            </ProductGrid>
        </Stack>
    </Element>
}